// Generated by view binder compiler. Do not edit!
package com.example.traningtimer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.traningtimer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSaveBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final Button buttonList;

  @NonNull
  public final Button buttonPrint;

  @NonNull
  public final Button buttonUnblock;

  @NonNull
  public final TextView textView4;

  private FragmentSaveBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAdd,
      @NonNull Button buttonList, @NonNull Button buttonPrint, @NonNull Button buttonUnblock,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.buttonList = buttonList;
    this.buttonPrint = buttonPrint;
    this.buttonUnblock = buttonUnblock;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSaveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSaveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_save, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSaveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAdd;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.buttonList;
      Button buttonList = ViewBindings.findChildViewById(rootView, id);
      if (buttonList == null) {
        break missingId;
      }

      id = R.id.buttonPrint;
      Button buttonPrint = ViewBindings.findChildViewById(rootView, id);
      if (buttonPrint == null) {
        break missingId;
      }

      id = R.id.buttonUnblock;
      Button buttonUnblock = ViewBindings.findChildViewById(rootView, id);
      if (buttonUnblock == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentSaveBinding((ConstraintLayout) rootView, buttonAdd, buttonList,
          buttonPrint, buttonUnblock, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
